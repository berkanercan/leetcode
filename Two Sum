class Solution {
public:
/**
 * 
 * map<int,Bar>::iterator it = m.find('2');
   Bar b3;
   if(it != m.end())
   {
       //element found;
       b3 = it->second;
   }
 * 
 * 
 * 
 */
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> result;
        /**
        for(int i = 0; i < nums.size(); i++){
            for( int j = i + 1; j < nums.size(); j++){
                if( nums.at(i) + nums.at(j) == target){
                    result.push_back(i+1);
                    result.push_back(j+1);
                }
            }
        }*/
        
        map<int,int> theMap;
        for(int i = 0; i < nums.size(); i++){
            int x = nums.at(i);
            map<int,int>::iterator it = theMap.find(target - x);
            if(  it != theMap.end() ){
                result.push_back(i+1);
                result.push_back(theMap.at(target-x)+1);
                std::sort(result.begin(), result.end());
                return result;
            }
            theMap.insert(std::pair<int, int>(x, i));
        }
        return result;
    }
};
